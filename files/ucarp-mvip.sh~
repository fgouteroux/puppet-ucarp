#!/bin/bash

### BEGIN INIT INFO
# Provides:          ucarp-mvip
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start ucarp interfaces
# Description:       Start ucarp interfaces
### END INIT INFO

# Author: Tero Kantonen <prkele@gmail.com>


PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="common address redundancy protocol daemon"
NAME=ucarp
DAEMON=/usr/sbin/$NAME
REALNAME=${NAME}-mvip
SCRIPTNAME=/etc/init.d/$REALNAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0
[ -x /sbin/ifup ] || exit 0
[ -x /sbin/ifdown ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Source function library.
. /lib/lsb/init-functions

# Read configuration variable file if it is present
[ -r /etc/default/$REALNAME ] && . /etc/default/$REALNAME

if [ "${UCARP_MVIP_ENABLED}" = "no" ]; then
    exit 0
fi

CONFIGURE_INTERFACES=yes
EXCLUDE_INTERFACES=
VERBOSE=no

[ -f /etc/default/networking ] && . /etc/default/networking

# Check that networking is up.
[ ${CONFIGURE_INTERFACES} = "no" ] && exit 0

get_files() {
    FILES=`find /etc/ucarp-mvip/ -maxdepth 1 -type f -name 'vip-*.conf' \
           -printf "%f\n" | LC_COLLATE="C" sort`
}

RETVAL=0

do_start() {
    echo -n $"Starting ${DESC}: "

    get_files

    if [ -z "${FILES}" ]; then
        echo $"no virtual addresses are configured in /etc/ucarp-mvip"
        return 2
    else
        for FILE in ${FILES}; do
            # Check that the file name gives us an ID between 1 and 255
            ID=`echo ${FILE}| sed 's/^vip-\(.*\).conf/\1/'`
            if [ ${ID} -lt 1 -o ${ID} -gt 255 ]; then
                return 2
            fi

            # Source ucarp settings
            . /etc/ucarp-mvip/${FILE}

            BIND_ADDRESS="`ifconfig ${BIND_INTERFACE} | sed -n 's/.*inet addr:\([^ ]*\) .*/\1/p' | head -n 1`"
            if [ -z "${BIND_ADDRESS}" ]; then
                echo "No IPADDRESS set for ${BIND_INTERFACE}"
                return 2
            fi

            # Check for 'auto' carp interfaces
            if grep -Eq "^\s*auto\s+${VIP_INTERFACE}\s*" /etc/network/interfaces; then
                echo "WARNING: 'auto' interface detected on ${VIP_INTERFACE}"
            fi

            VIP_ADDRESS=$(awk -v i=${VIP_INTERFACE} -v p=address -f /usr/share/ucarp-mvip/parseinterfaces.awk /etc/network/interfaces)
        
            if [ -z "${VIP_ADDRESS}" ]; then
                echo "No address found for ${VIP_INTERFACE} in /etc/network/interfaces"
                return 2
            fi

            start-stop-daemon --start --pidfile /var/run/ucarp.${ID} \
                --make-pidfile --background --test --exec /usr/sbin/ucarp -- \
                -v ${ID} -p ${PASSWORD} -s ${BIND_ADDRESS} -a ${VIP_ADDRESS} \
                -i ${VIP_INTERFACE} ${OPTIONS} \
                --upscript=/usr/share/ucarp-mvip/vip-up \
                --downscript=/usr/share/ucarp-mvip/vip-down > /dev/null \
                || return 1

            start-stop-daemon --start --pidfile /var/run/ucarp.${ID} \
                --make-pidfile --background --exec /usr/sbin/ucarp -- \
                -v ${ID} -p ${PASSWORD} -s ${BIND_ADDRESS} -a ${VIP_ADDRESS} \
                -i ${VIP_INTERFACE} ${OPTIONS} \
                --upscript=/usr/share/ucarp-mvip/vip-up \
                --downscript=/usr/share/ucarp-mvip/vip-down \
                || return 2
        done
    fi
}

do_stop() {
    echo -n $"Shutting down ${DESC}: "

    get_files

    [ ! -z "${FILES}" ] && \
    for FILE in ${FILES}; do
        ID=`echo ${FILE}| sed 's/^vip-\(.*\).conf/\1/'`

        # Source ucarp settings
        . /etc/ucarp-mvip/${FILE}
        start-stop-daemon --stop --pidfile /var/run/ucarp.${ID} \
            --exec /usr/sbin/ucarp -- -v ${ID} -p ${PASSWORD} -s \
            ${BIND_ADDRESS} -a ${VIP_ADDRESS} -i ${VIP_INTERFACE} ${OPTIONS} \
            --upscript=/usr/share/ucarp-mvip/vip-up \
            --downscript=/usr/share/ucarp-mvip/vip-down
        RETVAL="$?"

        if /sbin/ifconfig ${VIP_INTERFACE} down >/dev/null 2>&1; then
            :
        fi
    done
    return ${RETVAL}
}

case "$1" in
  start)
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$REALNAME"
    do_start
    case "$?" in
        0) log_end_msg 0 ;;
        1) log_progress_msg "already started"; log_end_msg 0 ;;
        2) log_end_msg 1 ;;
        *) log_end_msg 1 ;;
    esac
    ;;
  stop)
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$REALNAME"
    do_stop
    case "$?" in
        0) log_end_msg 0 ;;
        1) log_progress_msg "already started"; log_end_msg 0 ;;
        2) log_end_msg 1 ;;
        *) log_end_msg 1 ;;
    esac
    ;;
  status)
    status_of_proc "$DAEMON" "$REALNAME" && exit 0 || exit $?
    ;;
  restart|force-reload)
    $0 stop
    $0 start
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
    exit 3
    ;;
esac
